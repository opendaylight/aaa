{
  "comments": [
    {
      "key": {
        "uuid": "1aa4ed85_d65deeea",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/DomainStore.java",
        "patchSetId": 10
      },
      "lineNbr": 54,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T18:06:31Z",
      "side": 1,
      "message": "Minor thing but the recommended modifier ordering is static final.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_36c80274",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/DomainStore.java",
        "patchSetId": 10
      },
      "lineNbr": 56,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T18:06:31Z",
      "side": 1,
      "message": "Is this class a singleton and/or can it be accessed by multiple threads? If so this should be volatile and/or there needs to be synchronization in the methods below that access it.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_7cddf96f",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/DomainStore.java",
        "patchSetId": 10
      },
      "lineNbr": 57,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-16T23:30:26Z",
      "side": 1,
      "message": "If we want to do it properly, this member should not exist... each method should receive as a parameter a connection that is taken from the pool and return to the pool post execute.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_d6872e0e",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/DomainStore.java",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T18:06:31Z",
      "side": 1,
      "message": "Since StoreException is caught here, dbConnection could be null when accessed in the methods below. Based on the usages below, it seems reInitDb should be called prior to the use of dbConnection instead of in a finally block. Then StoreException can be propagated from here. In the finally blocks below, close the connection and set to null so it is re-created on the next call.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_fcd00955",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/DomainStore.java",
        "patchSetId": 10
      },
      "lineNbr": 80,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-16T23:30:26Z",
      "side": 1,
      "message": "this method should not be here but in the connection pool.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_160b86d7",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/DomainStore.java",
        "patchSetId": 10
      },
      "lineNbr": 84,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T18:06:31Z",
      "side": 1,
      "message": "Shouldn\u0027t this close the connection?",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_1cd64550",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/DomainStore.java",
        "patchSetId": 10
      },
      "lineNbr": 85,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-16T23:30:26Z",
      "side": 1,
      "message": "method should not exist as this class methods should be static.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_f62caa4c",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/DomainStore.java",
        "patchSetId": 10
      },
      "lineNbr": 126,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T18:06:31Z",
      "side": 1,
      "message": "Use logger.debug with format arg.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_360322ba",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/DomainStore.java",
        "patchSetId": 10
      },
      "lineNbr": 240,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T18:06:31Z",
      "side": 1,
      "message": "It\u0027s better to do: logger.debug(\"deleted {} records\", deleteCount);",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_76f99ac7",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/DomainStore.java",
        "patchSetId": 10
      },
      "lineNbr": 254,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T18:06:31Z",
      "side": 1,
      "message": "The downside to wrapping debug logging in this manner is that you lose the actual line # if you enable line # output in the appender. You don\u0027t need to check logger.isDebugEnabled() anyway if you use format args and avoid expensive args.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_96a0d691",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/GrantStore.java",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T18:06:31Z",
      "side": 1,
      "message": "Same as comments in DomainStore.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_36ad6289",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/RoleStore.java",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T18:06:31Z",
      "side": 1,
      "message": "Same as comments in DomainStore.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_56aa5e71",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/aaa/h2/persistence/UserStore.java",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T18:06:31Z",
      "side": 1,
      "message": "Same as comments in DomainStore.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_5cb6fd3e",
        "filename": "aaa-h2-store/src/main/java/org/opendaylight/yang/gen/v1/config/aaa/authn/h2/store/rev151128/AAAH2StoreModule.java",
        "patchSetId": 10
      },
      "lineNbr": 52,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-16T23:30:26Z",
      "side": 1,
      "message": "Seems that all the added code is miss placed and should be inside the H2Store and exposed with a single method call \"createTables\" by the H2Store that should be invoked just after instantiating the H2Store.",
      "revId": "4555a7a32c067b15996236075dbf53a7c4b5374a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}