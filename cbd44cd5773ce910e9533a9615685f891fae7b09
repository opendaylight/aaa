{
  "comments": [
    {
      "key": {
        "uuid": "d401a582_bb07885a",
        "filename": "aaa-shiro/impl/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 272,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-03-11T18:56:35Z",
      "side": 1,
      "message": "With H2 gone, we should be able to eliminate all of this, right?",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 272,
        "endChar": 41
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4850384a_ac610151",
        "filename": "aaa-shiro/impl/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 272,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-12T11:17:14Z",
      "side": 1,
      "message": "Maybe, but that is not in scope of this change, please never -1 it just because perhaps more could be done here - instead feel free to contribute by raising a follow-up change and remove more, if you think and have tested that it is safe.",
      "parentUuid": "d401a582_bb07885a",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 272,
        "endChar": 41
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64a96ade_4764ff6e",
        "filename": "aaa-shiro/impl/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 272,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-03-12T15:42:06Z",
      "side": 1,
      "message": "I was under the impression the purpose of this layer to allow users to register things without resorting to explicit Import-Package magic.\n\nThat capability is not demonstrated here -- in fact pax.web.service is added here as an import, which seems to indicate implementation leakage. I left a comment about that in the BP container.\n\nThat is very much grounds for -1, at least in my eyes. As for \u0027never -1\u0027: votes are a matter of opinion. It is up to you as contributor and for committers whether or not you take it into account.",
      "parentUuid": "4850384a_ac610151",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 272,
        "endChar": 41
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df6ae269_b54816c2",
        "filename": "aaa-shiro/impl/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 272,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-12T18:27:33Z",
      "side": 1,
      "message": "One of the purposes of this layer is indeed to allow users to register things without resorting to explicit Import-Package magic for classes listed in web.xml.  However this explicit Import-Package list here, without a * for default imports, seems to be about much more than only what was originally and historically in web.xml here.  I\u0027m not fully familiar with the exact history, and very reluctant to already remove this in this first change here (and have to retest it, and have Ryan retest restconf...).  I therefore propose to get this in as-is already, and perhaps in the future look at if this could be further cleaned-up later.\n\n\u003e  It is up to you as contributor and for committers whether or not you take it into account.\n\nRyan, as the AAA commmiter on this, could you weigh in and clarify if you require this to be further explored in this change, or if you are OK if this goes in like this already?",
      "parentUuid": "64a96ade_4764ff6e",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 272,
        "endChar": 41
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0cc1511_7899457b",
        "filename": "aaa-shiro/impl/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 272,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-12T23:10:47Z",
      "side": 1,
      "message": "\u003d\u003d\u003e https://git.opendaylight.org/gerrit/#/c/69411/",
      "parentUuid": "df6ae269_b54816c2",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 272,
        "endChar": 41
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17900128_800263f2",
        "filename": "aaa-shiro/impl/src/main/java/org/opendaylight/aaa/shiro/web/env/OsgiWebInitializer.java",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-03-12T15:42:06Z",
      "side": 1,
      "message": "Why is this not in the implementation?",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 33
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1797676e_5ce0eb98",
        "filename": "aaa-shiro/impl/src/main/java/org/opendaylight/aaa/shiro/web/env/OsgiWebInitializer.java",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-12T18:27:33Z",
      "side": 1,
      "message": "it cannot; the WebInitializer used in line 24 is aaa.shiro.web.env specific.  One could change this to take a WebInitializer parameter, but this seemed clearer and simpler.\n\nthis is also somewhat related to the other comment in impl-blueprint.xml ... this HAS to be a \u003cbean\u003e in the bundle which is registering web components, and cannot be a \u003cbean\u003e or exposed OSGi service in the web/impl-osgi.  \n\nI guess hypothetically it COULD be a simple class in impl-osgi, and not registered as a Bean nor Service, and then used in the BP XML of a bundle such as aaa-shiro, but that seems more confusing than adding any value, to me.  Think of these few lines here more as simple \"wiring\" that could also have been \"coded in XML\" in impl-blueprint.xml - I\u0027m just an XML hater, and will now raise a follow-up patch where I\u0027ll convert that impl-blueprint.xml to annotation based blueprint instead, where this class will become a @Singleton instead.",
      "parentUuid": "17900128_800263f2",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 33
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1324c7e3_66ba65dc",
        "filename": "aaa-shiro/impl/src/main/java/org/opendaylight/aaa/shiro/web/env/OsgiWebInitializer.java",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-12T23:40:17Z",
      "side": 1,
      "message": "\u003e will now raise a follow-up patch where I\u0027ll convert that impl-blueprint.xml to annotation based blueprint instead, where this class will become a @Singleton instead.\n\nactually strike that, this should not be a pre-req to get this in... may be later, some time; not now.",
      "parentUuid": "1797676e_5ce0eb98",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 33
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a859967d_7af0b7f9",
        "filename": "aaa-shiro/impl/src/main/resources/org/opendaylight/blueprint/impl-blueprint.xml",
        "patchSetId": 11
      },
      "lineNbr": 72,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-03-12T15:42:06Z",
      "side": 1,
      "message": "This should live osgi provider and should be injected here as a service.",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 72,
        "endChar": 9
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "723dcaee_a7d25664",
        "filename": "aaa-shiro/impl/src/main/resources/org/opendaylight/blueprint/impl-blueprint.xml",
        "patchSetId": 11
      },
      "lineNbr": 72,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-12T18:27:33Z",
      "side": 1,
      "message": "as per feedback given earlier to Tom, may I copy/paste: Nope, that doesn\u0027t work.  I spent a long night debugging why not.  It would take changes in Pax Web to make that possible; has to do with setting the thread context class loader to the correct bundle, which needs to be the one of the bundle using the PaxWebServer, not the impl-osgi one. You are more than welcome to try for yourself and enjoy experiencing the same... \"fun\" while debugging this for yourself.",
      "parentUuid": "a859967d_7af0b7f9",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 72,
        "endChar": 9
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d603075d_0329a486",
        "filename": "aaa-shiro/impl/src/main/resources/org/opendaylight/blueprint/impl-blueprint.xml",
        "patchSetId": 11
      },
      "lineNbr": 72,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-03-13T03:17:21Z",
      "side": 1,
      "message": "I am no stranger to ClassLoaders.\n\nNow why is PaxWebServer touchy about the classloader, and more specifically, why cannot the shim simply manipulate the TCCL (given the Class\u003c?\u003e which is being registered)?\n\nAll it takes is to do yangtools.util.ClassLoaderUtils.withClassLoader(ClassLoader, Callable)...",
      "parentUuid": "723dcaee_a7d25664",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 72,
        "endChar": 9
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3330758a_35fb36ea",
        "filename": "aaa-shiro/impl/src/main/resources/org/opendaylight/blueprint/impl-blueprint.xml",
        "patchSetId": 11
      },
      "lineNbr": 72,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-13T13:59:07Z",
      "side": 1,
      "message": "\u003e All it takes is to do yangtools.util.ClassLoaderUtils.withClassLoader(ClassLoader, Callable)...\n\ncool! Go for it... ;) More seriously: I had actually tried (the equivalent of) what this does already.  It does not work, because Pax Web sets the TCCL itself, and therefore overrides whatever we could set.\n\nIt\u0027s not PaxWebServer itself that is touchy about the classloader, but the registered Servlet and Filters could be - Shiro is.  I think the real question is not \"would there be some way to subclass and make Shirot not use TCCL\", but \"how can we make this easy to use without having to fix-up web components, and make it simple to switch a web.xml to programmatic registration\" - which this approach as currently proposed achieves.\n\nFull disclosure: I\u0027m rapidely loosing interest in further pursuing this and continue arguing about this.  Thank You (all who actively engaged) for the time you spent reviewing - it was fun.",
      "parentUuid": "d603075d_0329a486",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 72,
        "endChar": 9
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "649abc02_a254beaf",
        "filename": "aaa-shiro/impl/src/main/resources/org/opendaylight/blueprint/impl-blueprint.xml",
        "patchSetId": 11
      },
      "lineNbr": 72,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-03-13T14:56:24Z",
      "side": 1,
      "message": "\u003e \u003e All it takes is to do yangtools.util.ClassLoaderUtils.withClassLoader(ClassLoader,\n \u003e Callable)...\n \u003e \n \u003e cool! Go for it... ;) More seriously: I had actually tried (the\n \u003e equivalent of) what this does already.  It does not work, because\n \u003e Pax Web sets the TCCL itself, and therefore overrides whatever we\n \u003e could set.\n \u003e \n \u003e It\u0027s not PaxWebServer itself that is touchy about the classloader,\n \u003e but the registered Servlet and Filters could be - Shiro is. \n\nThat\u0027s b/c you were setting the TCCL on the register call and paw web sets it\u0027s own TCCL in the middle when it invokes the servlet code. The failure occurs in the Shiro filter code so we should try setting the TCCL in AAAShiroFilter before it calls the base class. I can try that if you want...",
      "parentUuid": "3330758a_35fb36ea",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 72,
        "endChar": 9
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "832e71d3_88cfdc8f",
        "filename": "aaa-shiro/impl/src/main/resources/org/opendaylight/blueprint/impl-blueprint.xml",
        "patchSetId": 11
      },
      "lineNbr": 72,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-13T15:54:27Z",
      "side": 1,
      "message": "Sure, don\u0027t let me stop you to go for it, but ideally in a follow-up change owned by you instead of this one?  I have no doubt that it is possible to one way or another do something very smart and eventually get Shiro working with more time, but I think it\u0027s the wrong approach here, because of what I explained above:  It should be simple to use this and switch from declarative web.xml to this API.  We cannot have to debug every 3rd party web framework to make more OSGi compliant than it would have to be if one had used web.xml.  To the best of my abilities, this as-is achieves that.  The fact that PaxWebServer is not registered as an OSGi service but is used directly by bundles is a very minor detail, to me.\n\nI\u0027m loosing interest in further tweaking this, and am against  requring future migration from web.xml to this API in other projects require a Ph.D. in classloadology.\n\nPS: Shame to see you retract your earlier +1? ;-)",
      "parentUuid": "649abc02_a254beaf",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 72,
        "endChar": 9
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "769bd31c_41176ecf",
        "filename": "features/odl-aaa-shiro/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 73,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-03-11T18:58:18Z",
      "side": 1,
      "message": "This means we are pulling explicitly pax-web-api. Shouldn\u0027t that be provided by a karaf feature instead?",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 73,
        "endChar": 20
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17f1725e_0e25ee08",
        "filename": "features/odl-aaa-shiro/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 73,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-12T11:17:14Z",
      "side": 1,
      "message": "Probably, but let us please clarify through comments here EXACTLY what I need to do to get your +1 on this one, before I actually make any changes?\n\nSo (AFAIK) the \"pax-web-api\" bundle gets installed by Karaf\u0027s standard web feature, which we (ODL) always already have install anyway as in, aaa and restconf don\u0027t run without web.  Therefore, this works just fine in practice.  \n\nIf your argument is that we should perhaps add a more explicit dependency to the Karaf web feature somewhere, then I\u0027m happy to do that - where do you want it?  In odl-aaa-shiro/src/main/feature/feature.xml as a \u003cfeature\u003eweb\u003c/feature\u003e, after the odl-karaf-feat-jetty? But... odlparent\u0027s odl-karaf-feat-jetty features already has a \u003cfeature\u003ewar - so doesn\u0027t that do exactly this already?\n\nI\u0027m therefore unclear exactly what you are suggesting - will you clarify?",
      "parentUuid": "769bd31c_41176ecf",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 73,
        "endChar": 20
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "645d320b_def88931",
        "filename": "features/odl-aaa-shiro/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 73,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-03-12T15:42:06Z",
      "side": 1,
      "message": "What I am saying is that it is unclear why that pax-web-api bundle is being mentioned in feature.xml -- from what you are saying it should have been eliminated as being pulled in by the war feature (through something like 5 dependencies), but it is not.\n\nWhat I would like to see is that being acknowledged and tracked somewhere, as it is clearly some amount of technical debt.",
      "parentUuid": "17f1725e_0e25ee08",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 73,
        "endChar": 20
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62df1b90_954b2830",
        "filename": "features/odl-aaa-shiro/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 73,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-12T18:27:33Z",
      "side": 1,
      "message": "I\u0027m afraid but I still don\u0027t think I really understand what you are requesting I do here, BUT on looking this over, I have realized that this actually is not needed at all here in the feature, since it\u0027s already in aaa-shiro/impl/pom.xml as well anyway, so transitively inherited.  I\u0027m therefore willing to just completely remove this, if that would help to get this point resolved - could you please kindly confirm that it would?",
      "parentUuid": "645d320b_def88931",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 73,
        "endChar": 20
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13302e44_5096bf3f",
        "filename": "features/odl-aaa-shiro/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 73,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-03-13T03:23:21Z",
      "side": 1,
      "message": "How about removing it and checking the resulting feature.xml?",
      "parentUuid": "62df1b90_954b2830",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 73,
        "endChar": 20
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cc72556_e9eabe7e",
        "filename": "features/odl-aaa-shiro/pom.xml",
        "patchSetId": 11
      },
      "lineNbr": 73,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-13T13:59:07Z",
      "side": 1,
      "message": "sure, see https://git.opendaylight.org/gerrit/69439.",
      "parentUuid": "13302e44_5096bf3f",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 73,
        "endChar": 20
      },
      "revId": "cbd44cd5773ce910e9533a9615685f891fae7b09",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}