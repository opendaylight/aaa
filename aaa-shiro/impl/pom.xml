<?xml version="1.0" encoding="UTF-8"?>
<!-- vi: set et smarttab sw=4 tabstop=4: -->
<!--
Copyright Â© 2017 Brocade Communications Systems and others. All rights reserved.

This program and the accompanying materials are made available under the
terms of the Eclipse Public License v1.0 which accompanies this distribution,
and is available at http://www.eclipse.org/legal/epl-v10.html
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opendaylight.odlparent</groupId>
    <artifactId>bundle-parent</artifactId>
    <version>2.0.5</version>
    <relativePath/>
  </parent>

  <groupId>org.opendaylight.aaa</groupId>
  <artifactId>aaa-shiro</artifactId>
  <version>0.7.0-SNAPSHOT</version>
  <name>ODL :: aaa :: ${project.artifactId}</name>
  <packaging>bundle</packaging>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>aaa-parent</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>aaa-artifacts</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>aaa-shiro-api</artifactId>
    </dependency>

    <!-- jersey client for moon authN -->
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- OAuth2 dependencies for moon -->
    <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>
    <dependency>
        <groupId>org.opendaylight.aaa</groupId>
        <artifactId>aaa-cert</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
    </dependency>
    <!-- Enforce newer commons-beanutils and commons-collections versions -->
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.9.3</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.2</version>
    </dependency>

    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.dependencymanager</artifactId>
      <scope>provided</scope>
    </dependency>

    <!--Yang Binding -->
    <dependency>
      <groupId>org.opendaylight.controller</groupId>
      <artifactId>sal-binding-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.controller</groupId>
      <artifactId>sal-common-util</artifactId>
    </dependency>
        <dependency>
            <groupId>org.opendaylight.aaa</groupId>
            <artifactId>aaa-filterchain</artifactId>
        </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.dependencymanager</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
    </dependency>

    <!-- JSON JAXB Stuff -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-json-org</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-base</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlets</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Testing Dependencies -->
    <dependency>
      <groupId>com.sun.jersey.jersey-test-framework</groupId>
      <artifactId>jersey-test-framework-grizzly2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.7.21</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.jersey-test-framework</groupId>
      <artifactId>jersey-test-framework-grizzly2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty-servlet-tester</artifactId>
      <version>7.0.0.pre5</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-Name>${project.groupId}.${project.artifactId}</Bundle-Name>
            <Export-Package>
              org.opendaylight.aaa.impl.shiro,
              org.opendaylight.aaa.impl.shiro.tokenauthrealm,
              org.opendaylight.aaa.impl.shiro.tokenauthrealm.auth,
              org.opendaylight.aaa.shiro,
              org.opendaylight.aaa.shiro.filters,
              org.opendaylight.aaa.shiro.realm,
              org.opendaylight.aaa.shiro.web.env
            </Export-Package>
            <Import-Package>
              com.google.*,
              com.sun.jersey.spi.container.servlet,
              javax.servlet.http,
              javax.servlet.*,
              org.apache.oltu.oauth2.*,
              javax.ws.rs,javax.ws.rs.core,
              javax.xml.bind.annotation,
              org.opendaylight.aaa.*,
              org.opendaylight.aaa.api.*,
              org.opendaylight.aaa.filterchain.filters,
              org.xml.sax,
              org.apache.felix.dm,
              org.apache.shiro.web.env,org.apache.shiro.authc,
              org.eclipse.jetty.servlets;version="[8.1,10)",
              org.opendaylight.*,
              org.osgi.framework,
              org.osgi.util.tracker,
              org.osgi.service.cm.*,
              org.osgi.service.http.*,
              org.apache.shiro.web.*,
              org.apache.shiro.*,
              org.slf4j.*
            </Import-Package>
            <Web-ContextPath>/auth</Web-ContextPath>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <!-- attach idmtool as an artifact -->
                <artifact>
                  <file>${project.build.directory}/classes/idmtool.py</file>
                  <type>py</type>
                  <classifier>idmtool</classifier>
                </artifact>
                <!-- attach authn.cfg as an artifact -->
                <artifact>
                  <file>${project.build.directory}/classes/authn.cfg</file>
                  <type>cfg</type>
                  <classifier>config</classifier>
                </artifact>
                <!-- attach aaa-app-config.xml as an artifact -->
                <artifact>
                  <file>${project.build.directory}/classes/initial/aaa-app-config.xml</file>
                  <type>xml</type>
                  <classifier>aaa-app-config</classifier>
                </artifact>
                <!-- attach convert-shiro-ini-to-rest-payload.py as an artifact -->
                <artifact>
                  <file>${project.build.directory}/classes/convert-shiro-ini-to-rest-payload.py</file>
                  <type>py</type>
                  <classifier>convert-shiro-ini</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
