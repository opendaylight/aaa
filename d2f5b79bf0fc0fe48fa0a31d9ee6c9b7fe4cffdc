{
  "comments": [
    {
      "key": {
        "uuid": "1aa4ed85_fd1ca715",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAByteArrayWrapper.java",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "this looks like a home-grown java.nio.ByteBuffer (or io.netty.buffer.ByteBuf). Since this package seems to be dealing with network, I suspect it should be the latter.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_9d9253f5",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAByteArrayWrapper.java",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "It might be, however considering this is a small implementation that is working exactly as \nI expect it to work I prefer to keep it as is as I have following ideas that will make it hard for me to use other utilities.",
      "parentUuid": "1aa4ed85_fd1ca715",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_7df3d773",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T02:12:00Z",
      "side": 1,
      "message": "This should be volatile.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_d840d937",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T03:03:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_7df3d773",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_bd8f0fcc",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T02:12:00Z",
      "side": 1,
      "message": "Access to the \"connections\" map isn\u0027t synchronized elsewhere in this class. However, to make things easier, it seems that adding a connection would be infrequent so you could make \"connections\" an immutable map. When adding a connection, make a copy of  \"connections\", modify the copy and set \"connections\" to the copy. Synchronize on \"this\" or a separate lock object.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_984a6154",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T03:03:19Z",
      "side": 1,
      "message": "Note that the connection can be instantiate from two different threads, hence the synchronization. Also during connection adding there is an iteration over the connections to determinate old ones should be removed.",
      "parentUuid": "1aa4ed85_bd8f0fcc",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_783c4594",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T03:23:49Z",
      "side": 1,
      "message": "I know why you\u0027re synchronizing but you need to synchronize and protect \"connections\" every where it\u0027s accessed. which you\u0027re not. Since \"connections\" won;t change that often, I\u0027m suggesting to simplify the code and make it immutable so reads don\u0027t need to be synchronized. Essentially copy-on-write",
      "parentUuid": "1aa4ed85_984a6154",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_1d9f4305",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 105,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T02:12:00Z",
      "side": 1,
      "message": "It looks like start should be called outside the synchronized block.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_986101d6",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 105,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T03:03:19Z",
      "side": 1,
      "message": "I can take it out, but why do you think that? (e.g. why does it matter?)",
      "parentUuid": "1aa4ed85_1d9f4305",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_3846cd24",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 105,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T03:23:49Z",
      "side": 1,
      "message": "You should keep synchronized blocks as small as possible and avoid potentially expensive operations to reduce contention and long blocked threads. Since you\u0027re synchronizing to protect access to \"connections\", the call to start doesn\u0027t need to be in the synchronized block. It really doesn\u0027t matter much here - it\u0027s just good practice.",
      "parentUuid": "1aa4ed85_986101d6",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_bde14f9c",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T02:12:00Z",
      "side": 1,
      "message": "Does this need to busy wait? At the very least, it doesn\u0027t need to sleep block for 1 sec, 50 ms should suffice. If interrupted it should return.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_5882a953",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T03:03:19Z",
      "side": 1,
      "message": "This is a dirty implementation, I plan to do it properly via wait/notify in the future.",
      "parentUuid": "1aa4ed85_bde14f9c",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_5dbcdb6c",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T02:12:00Z",
      "side": 1,
      "message": "Line too long.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_78876562",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T03:03:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_5dbcdb6c",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_7dc197e3",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 158,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T02:12:00Z",
      "side": 1,
      "message": "Break here?",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_187c3172",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 158,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T03:03:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_7dc197e3",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_3dbb1f74",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T02:12:00Z",
      "side": 1,
      "message": "datagramSocket is already closed in shutdown.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_d8953989",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T03:03:19Z",
      "side": 1,
      "message": "This is a demon thread, I was not sure if the shutdown was actually called when i reached this point so i add another close.",
      "parentUuid": "1aa4ed85_3dbb1f74",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_1de8a37b",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T02:12:00Z",
      "side": 1,
      "message": "What is this used for? Shouldn\u0027t it be incremented somewhere?",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_b88cfd80",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAClusterNode.java",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T03:03:19Z",
      "side": 1,
      "message": "Yep, a minor bug.\nIt is used to determinate if the error log should be info or error. Between two hosts there are two connections (to avoid race condition when the hosts are opening connection to each other). when one fails, the log should be info, otherwise error.",
      "parentUuid": "1aa4ed85_1de8a37b",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_bd162ff0",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "Only write-taken. This lock should be eliminated completely,\nthe MessageDiest should initialized once. Access to it should be made synchronized on the \u0027md\u0027 object. Since it is not leaking, outside this class the only locking conflicts would be with the actual implementation, which is completely fine.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_1db6638b",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "Are you suggestion to move to synchronized instead of locking? Isn\u0027t synchronized slower?",
      "parentUuid": "1aa4ed85_bd162ff0",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_2f41a40b",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T12:25:11Z",
      "side": 1,
      "message": "synchronized() is a classic mutex, which is always faster than a read-write lock. Read-write lock is only appropriate when there significantly more readers than writers -- in this particular instance there are no readers at all.",
      "parentUuid": "1aa4ed85_1db6638b",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_9df013cb",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "should be final and properly initialized via constructors",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_7d4f5793",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_9df013cb",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_5dba9be2",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "inline into static initializer block, which eliminates the need for null check or locking, since static initializers are run when the class is loaded (so it is impossible to call static methods from outside).",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_fdaca737",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_5dba9be2",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_7dbf57d1",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "This is a critical error as this class is unable to operate correctly, change this to:\n\nthrow new ExceptionInInitializerError(e);",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_3d723fe6",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_7dbf57d1",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_fde34703",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "Java 9 compatibility: do not use _ in identifiers. You can name arguments the same as field names and use:\n\nthis.md5Long1 \u003d md5Long1;",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_dd768bd8",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_fde34703",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_7da677c3",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "Use Guava\u0027s Longs.fromByteArray() here",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_fd7347e5",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "why? this has proven to work fast and i don\u0027t need to consider and test what is the most signification byte, e.g. direction.",
      "parentUuid": "1aa4ed85_7da677c3",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_1dabc38a",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "Longs.fromByteArray(Arrays.copyOfRange(by, 8. 16))",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_9d80138d",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 83,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "same reply. It is working as expected with no issues.",
      "parentUuid": "1aa4ed85_1dabc38a",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_3db0fff3",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 96,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "java.util.Objects.hash(md5Long1, md5Long2) is a better function, as it uses all bits.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_5d4a9b84",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAMD5Identifier.java",
        "patchSetId": 6
      },
      "lineNbr": 96,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_3db0fff3",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_fdf587cb",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "exposing public arrays is a security risk, as they can be affected via System.arrayCopy(). This constants look like implementation details, so should be made private (or package-private).",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_1d442373",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_fdf587cb",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_ddf8cbc6",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "is this perhaps a cache? Can we use LoadingCache for that, please?\n\nIt also lookss like a candidate for \u0027final.\n\nIf it is not a cache, classToId and itToClass should be combined into a BiMap.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_1d3bc3ec",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "I would not call it a cache, it is a set of maps to enable the encoder to determinate which serializer to use for each object. it should be populated once when the module loads.",
      "parentUuid": "1aa4ed85_ddf8cbc6",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_9d0253b3",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "magic constant: please create a constant field to hold \u00271024\u0027",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_3d40ff55",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_9d0253b3",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_3d2b1f32",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "where does \u00276\u0027 come from? NULL.length?",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_dd244bc8",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectEncoder.java",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1aa4ed85_3d2b1f32",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_dd944b46",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectSerializer.java",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "This is the same as com.google.common.base.Converter\u003cT, AAAByteArrayWrapper\u003e",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_9d2ed3a4",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectSerializer.java",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "I\u0027ll look into that.",
      "parentUuid": "1aa4ed85_dd944b46",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_bd54ef21",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectSerializer.java",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T02:12:00Z",
      "side": 1,
      "message": "This also looks like a mechanism to serialize objects over the wire. If so, why not use Java serialization or google\u0027s protobuf - no need to re-invent the wheel.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_5d185b84",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectSerializer.java",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "Unfortunately Java serialization is extremely slow and google protobuf require hard coding, creating messages and compiling, which cannot be done in runtime, a feature i am planning in the future.",
      "parentUuid": "1aa4ed85_bd54ef21",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_f892759e",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectSerializer.java",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-09T02:49:41Z",
      "side": 1,
      "message": "I wouldn\u0027t say it\u0027s extremely slow. It can have performance impact for complicated objects but yours are simple. The CDS uses java serialization and it\u0027s performant. At what rate do you expect to be serializing users/roles etc - I would think pretty low. Also it provides versioning and backwards/forwards compatibility (if used right). \n\nAnother option is to use Externalizable (more lightweight). Either way, I don\u0027t see a need to invent your own serialization framework.",
      "parentUuid": "1aa4ed85_5d185b84",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_98e6e143",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/clustering/AAAObjectSerializer.java",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T03:03:19Z",
      "side": 1,
      "message": "Well, this patch is half backed. I am missing a journal... when i will implement the journal, it is there where i will get hit by java serializatin issues. In java serialization, the amount of bytes to write on a single object will be around 200-250 (or more) bytes per entry, depending on the class package and name \u0026 etc. Using this method, the same object bytes will be around 40-50 and that will be performance impact. The real traffic will probably be over the tokens.",
      "parentUuid": "1aa4ed85_f892759e",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_bd9b8f71",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/serializers/DomainSerializer.java",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-09T00:41:41Z",
      "side": 1,
      "message": "this class should never be instantiated, as it has seem to be thread-safe. This class should be turned into a constant field instead.",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_d8121958",
        "filename": "aaa-authn-api/src/main/java/org/opendaylight/aaa/api/serializers/DomainSerializer.java",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 2025
      },
      "writtenOn": "2015-12-09T02:35:16Z",
      "side": 1,
      "message": "In the future I would like to create those @ runtime, hence I would prefer to keep it as is.",
      "parentUuid": "1aa4ed85_bd9b8f71",
      "revId": "d2f5b79bf0fc0fe48fa0a31d9ee6c9b7fe4cffdc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}