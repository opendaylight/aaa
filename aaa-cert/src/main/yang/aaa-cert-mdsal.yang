/*
Copyright (c) 2016 Inocybe Technology All rights reserved.

This program and the accompanying materials are made available under the
terms of the Eclipse Public License v1.0 which accompanies this distribution,
and is available at http://www.eclipse.org/legal/epl-v10.html INTERNAL
*/
module aaa-cert-mdsal {
    namespace "urn:opendaylight:yang:aaa:cert:mdsal";
    prefix "aaa-cert-mdsal";

    revision 2016-03-21 {
        description "Initial revision";
    }

    description
        "Yang model definition for aaa certificate using MDSAL";

    contact
        "melserngawy@inocybe.com";

    import config {
        prefix config;
        revision-date 2013-04-05;
    }

    import opendaylight-md-sal-binding {
        prefix md-sal-binding;
        revision-date 2013-10-28;
    }

    grouping node-certificate {
        leaf alias {
            description "network node certificate alias";
            type string;
        }
        leaf x500-certificate {
            description "network node certificate";
            type string;
        }
    }

    grouping keystore {
        leaf name {
            description "keystore name";
            type string;
        }
        leaf alias {
            description "key alias";
            type string;
        }
        leaf store-password {
            description "keystore password";
            type string;
        }
        leaf dname {
            description "X.500 Distinguished Names should be in the following formate
                CN=commonName
                OU=organizationUnit
                O=organizationName
                L=localityName
                S=stateName
                C=country";
            type string;
        }
        leaf validity {
            description "validity";
            type int32;
        }
        leaf key-alg {
            description "supported key geneartion algorithmes are DSA and RSA";
            type string;
        }
        leaf sign-alg {
            description "supported sign algorithmes for DSA the default sign Alg is SHA1withDSA and for RSA the
                default sign Alg is MD5withRSA";
            type string;
        }
        leaf keysize {
            description "key size is 1024 or 2048";
            type int32;
        }
        leaf keystoreFile {
            description "keystore file as binary";
            type binary;
        }
        list certificates {
            description "list of certificates that exist in the keystore";
            uses node-certificate;
        }
    }

    grouping cipher-suite {
        list cipher-suites {
             leaf suiteName {
                 type string;
             }
        }
    }

    grouping ssl-data {
        leaf bundleName {
            description "bundle name";
            type string;
        }
        container odl-keystore {
            uses keystore;
        }
        container trust-keystore {
            uses keystore;
        }
        uses cipher-suite;
    }

    identity aaa-cert-mdsal {
        base config:module-type;
        config:java-name-prefix AaaCertMdsalProvider;
    }

    augment "/config:modules/config:module/config:configuration" {
        case aaa-cert-mdsal {
            when "/config:modules/config:module/config:type = 'aaa-cert-mdsal'";
            container aaa-broker {
                uses config:service-ref {
                    refine type {
                        mandatory true;
                        config:required-identity md-sal-binding:binding-broker-osgi-registry;
                    }
                }
            }
            leaf password {
                description "Encryption password for the aaa certificate store";
                type string;
            }
            leaf init-vector {
                description "Initializing vector uses to encrypt the aaa certificate store";
                type string;
            }
        }
    }

}