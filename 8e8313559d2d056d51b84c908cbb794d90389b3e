{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_525eb477",
        "filename": "aaa-shiro/impl/src/main/java/org/opendaylight/aaa/impl/shiro/keystone/domain/KeystoneAuth.java",
        "patchSetId": 11
      },
      "lineNbr": 131,
      "author": {
        "id": 4013
      },
      "writtenOn": "2017-03-13T14:42:08Z",
      "side": 1,
      "message": "Why not having one Domain class ? and plz explain your thoughts about having nested inner classes ?",
      "range": {
        "startLine": 121,
        "startChar": 11,
        "endLine": 131,
        "endChar": 13
      },
      "revId": "8e8313559d2d056d51b84c908cbb794d90389b3e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_7243f86c",
        "filename": "aaa-shiro/impl/src/main/java/org/opendaylight/aaa/impl/shiro/keystone/domain/KeystoneAuth.java",
        "patchSetId": 11
      },
      "lineNbr": 131,
      "author": {
        "id": 6419
      },
      "writtenOn": "2017-03-13T15:14:20Z",
      "side": 1,
      "message": "In this file, that procedure is already in place for the Identity class: within it, it has a \u0027Password\u0027 class, which in turn has a \u0027User\u0027 class, which in turn has a \u0027Domain\u0027 class. \n\nI just repeated would looked like \u0027the way of doing things\u0027.\n\nA bit of context regarding it: the inner classes are meant to be only used by the jackson serializer / deserializer - the \u0027programmer\u0027 only interfaces directly with them in the unit tests. \n\nSame thing could be done without nested classes - but it would mean having 8 classes instead of one, each having less code than the copyright message.",
      "revId": "8e8313559d2d056d51b84c908cbb794d90389b3e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}